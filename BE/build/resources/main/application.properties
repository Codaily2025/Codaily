spring.application.name=Codaily

# application-secret.properties import
spring.config.import=optional:classpath:application-secret.properties


# PostgreSQL JDBC
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
# or create / none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# GitHub OAuth
github.client-id=${GITHUB_CLIENT_ID}
github.client-secret=${GITHUB_CLIENT_SECRET}
github.redirect-uri=http://localhost:8080/oauth/github/callback
github.token-uri=https://github.com/login/oauth/access_token
github.user-uri=https://api.github.com/user


# OAuth Login
#spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
#spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
#spring.security.oauth2.client.registration.github.scope=read:user,user:email
#spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response